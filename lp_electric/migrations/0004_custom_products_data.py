# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-08-08 07:38
from __future__ import unicode_literals
import os.path


from django.db import migrations
from django.core.files.images import ImageFile

import lp_electric
from lp_electric.models import Category, Product, ProductPage, Property
from images.models import Image

cd_up = os.path.dirname
IMG_PATH = os.path.join(cd_up(cd_up(lp_electric.__file__)), 'assets/migrations/')


def create_image_model(model, path, slug):
    image_file = ImageFile(file=open('{}{}.jpg'.format(path, slug), mode='rb'))
    image_model = Image.objects.create(
        model=model,
        slug=slug,
        image=image_file
    )
    image_file.close()
    return image_model


# Inspired by Django doc:
# https://docs.djangoproject.com/en/1.9/ref/contrib/sites/#enabling-the-sites-framework
def set_custom_products(apps, schema_editor):
    first_page = ProductPage.objects.create(
        h1='Плита как из ада',
        content='<p>Плита жарит как в аду. На пацана.</p>'
    )
    second_page = ProductPage.objects.create(
        h1='Утюг для бабок',
        content='<p>Если вам не хватает бабок, просто погладьте утюгом кого-нибудь, '
        'у кого они есть.</p>'
    )

    first_product_image_one = create_image_model(
        model=first_page, path=IMG_PATH, slug='first-one')
    first_product_image_two = create_image_model(
        model=first_page, path=IMG_PATH, slug='first-two')
    second_product_image_one = create_image_model(
        model=second_page, path=IMG_PATH, slug='second-one')
    second_product_image_two = create_image_model(
        model=second_page, path=IMG_PATH, slug='second-two')

    get_category = Category.objects.get

    first_product = Product.objects.create(
        name='Плита из ада',
        page=first_page,
        category=get_category(page__slug='coffee-makers')
    )
    second_product = Product.objects.create(
        name='Утюг для бабок',
        page=second_page,
        sibling=first_product,
        category=get_category(page__slug='mixers')
    )

    props_data = [
        ('Мощность', '2000 Вт'),
        ('Парогенератор', 'есть'),
        ('Защита от капель', 'есть'),
        ('Защита от накипи', 'есть'),
        ('Ручка', 'мягкая'),
        ('Парогенератор', 'есть'),
        ('Подошва', 'керамическая'),
    ]
    for name, value in props_data:
        Property.objects.create(name=name, value=value, page=first_page)
    for name, value in props_data:
        Property.objects.create(name=name, value=value, page=second_page)


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('lp_electric', '0003_custom_categories_data'),
    ]

    operations = [
        migrations.RunPython(set_custom_products),
    ]
